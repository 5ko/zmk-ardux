/*
 * Copyright (c) 2021 Mike "KemoNine" Crosson
 * 2024 modified by Petko Yotov pmwiki.org/petko
 *
 * SPDX-License-Identifier: MIT
 */



#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>


// HOST_OS: Linux=1, MacOS=2
#define HOST_OS 1
#include "zmk-helpers/helper.h"
// Unicode on Ubuntu seems to work in Firefox, LibreOffice, Terminator, 
// but not in Kate/KWrite or GEdit. Will implement accents with dead keys.
// #include "zmk-helpers/unicode-chars/currency.dtsi"
// #include "zmk-helpers/unicode-chars/french.dtsi"
// #include "zmk-helpers/unicode-chars/greek.dtsi"
// #include "zmk-helpers/unicode-chars/russian.dtsi"

#include "the_paintbrush_left.overlay"

// ARTS RITA Row
#define T4 0
#define T3 1
#define T2 2
#define T1 3
// EYIO NOSE Row
#define B4 4
#define B3 5
#define B2 6
#define B1 7

// seno
// rita
// soar
// inet
// 
// webdev stuff:
// rate
// soni

#define  TIMEOUT_STICKY_LEADER_KEY  5000

&sk {
  release-after-ms = <TIMEOUT_STICKY_LEADER_KEY>;
};
&sl { 
  release-after-ms = <TIMEOUT_STICKY_LEADER_KEY>;
};
&mt {
  tapping-term-ms = <300>;
};

  
/*****************************************
 * Layer IDs used by the ARDUX keymap
 * Do NOT change these and do NOT change the order of the layers as shown below
 *****************************************/
#define L_BASE 0
#define L_NUMB 1
#define L_QNAV 2
#define L_BT_S 3
#define L_FUNC 4
#define L_MOD  5
#define L_SYMB 6



// #define L_GLOB -1
// #define  4
// #define L_XX1 6
// #define L_XX2 7


// Delay for combo
#undef COMBO_TERM
#define COMBO_TERM 175
#define TAPDANCE_TERM 400

// ZMK_COMBO(name, bindings, keypos, layers, timeout, prior_idle, extra)
ZMK_COMBO(reset, &sys_reset, 0 1 2 3 4 5 6 7)
// ZMK_COMBO(enter, &kp ENTER, T1 B1)

ZMK_COMBO(layer_bt_select, &sl L_BT_S, T1 B1 T4 B4)
ZMK_COMBO(layer_func, &tog L_FUNC, B4 T3 T2)

// Tap dance is difficult with fingers 3 & 4, better use mod-taps
// ZMK_TAP_DANCE(n1, bindings = <&kp N1>, <&kp N2>, <&kp N3>; tapping-term-ms = <TAPDANCE_TERM>; )
// ZMK_TAP_DANCE(n4, bindings = <&kp N4>, <&kp N5>, <&kp N6>; tapping-term-ms = <TAPDANCE_TERM>; )
// ZMK_TAP_DANCE(n7, bindings = <&kp N7>, <&kp N8>, <&kp N9>; tapping-term-ms = <TAPDANCE_TERM>; )

// ZMK_COMBO(combo_space, &kp SPACE, B4 B3 B2 B1, L_BASE)


// Combos NUM layer
ZMK_COMBO(num_7, &kp N8, T1 T2, L_NUMB)
ZMK_COMBO(num_8, &kp N7, T3 T2, L_NUMB)
ZMK_COMBO(num_0, &kp N0, B3 B2, L_NUMB)
ZMK_COMBO(num_9, &kp N9, B2 B1, L_NUMB)
// ZMK_COMBO(num_???, &kp ?, T3 T1, L_NUMB)
// ZMK_COMBO(num_???, &kp ?, B3 B1, L_NUMB)
// ZMK_COMBO(num_???, &kp ?, T3 T2 T1, L_NUMB)
// ZMK_COMBO(num_???, &kp ?, B3 B2 B1, L_NUMB)




// Combos QUICK NAV layer
ZMK_COMBO(qnav_pgup, &kp PG_UP, T3 T2, L_QNAV)
ZMK_COMBO(qnav_pgdn, &kp PG_DN, B3 B2, L_QNAV)
ZMK_COMBO(qnav_home, &kp HOME,  T2 T1, L_QNAV)
ZMK_COMBO(qnav_end,  &kp END,   B2 B1, L_QNAV)

// C_AC_UNDO/K_UNDO and K_REDO work in LibreOffice but not in Kate/Gedit/Firefox
ZMK_COMBO(qnav_undo,  &kp LC(Z),      T3 T2 T1, L_QNAV)
ZMK_COMBO(qnav_redo,  &kp LC(LS(Z)),  B3 B2 B1, L_QNAV)

ZMK_COMBO(func_9,  &kp F9,  T2 T1, L_FUNC)
ZMK_COMBO(func_10, &kp F10, T4 T3, L_FUNC)
ZMK_COMBO(func_11, &kp F11, B2 B1, L_FUNC)
ZMK_COMBO(func_12, &kp F12, B4 B3, L_FUNC)


// Combos BLUETOOTH layer
ZMK_COMBO(bt_clear_current_profile, &bt BT_CLR, T3 T2 B3 B2, L_BT_S)

ZMK_MOD_TAP(shift2,
  tapping-term-ms = <TAPDANCE_TERM>;
  bindings = <&sk LSHFT>, <&tog LSHFT>;
)

// TODO: Functions F1-F12, Accented characters or combining accents
// Combos letters
// Punctuation
// Most used keyboard shortcuts Alt+Tab, Alt+Shift+Tab, Ctrl+(C|X|V|Z),  Alt+Caps
// Media keys Vol UP/DOWN/MUTE, PlayPause/PREV/NEXT, PrintScr,Ins
// Mouse
// Display


// etinoars
// TODO: lc.pduhfm,()g=b:"-;vyw{}0x/k'1[]2&_jz\$q+53*4!|9>#68@%?7<^`~
// TODO: list other stats from keylogger
// modifiers: 



ZMK_TAP_DANCE(space_dot, bindings = <&lt L_SYMB SPACE>, <&kp DOT>, <&kp COMMA>; tapping-term-ms = <TAPDANCE_TERM>; )




/*****************************************
 * Standard ARDUX layer definitions
 * !!!!!!!!!! FOR LEFT HANDED USE !!!!!!!!!!
 *****************************************/

/ { keymap { compatible = "zmk,keymap";
  base {
    display-name = "Base";
    bindings = <
      &lt L_NUMB I  &kp T   &kp A   &lt L_MOD ENTER
      &lt L_QNAV O  &kp S   &kp E   &space_dot
    >;
  };
  numbers {
    display-name = "NUM";
    bindings = <
      &mo L_NUMB   &mt STAR  N3   &mt PLUS  N2   &mt DOT   N1
      &none        &mt SLASH N6   &mt MINUS N5   &mt COMMA N4
    >;
  };
  quicknav {     
    display-name = "QNAV";
    bindings = <                      
      &none        &kp UP     &mt LC(LEFT) LEFT    &mt LC(RIGHT) RIGHT
      &mo L_QNAV   &kp DOWN   &mt LC(DEL)  DEL     &mt LC(BSPC)  BSPC
    >;         
  };
  bt {
    display-name = "BT";
    bindings = <
      &out OUT_BLE   &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0
      &out OUT_USB   &bt BT_SEL 5  &bt BT_SEL 4  &bt BT_SEL 3
    >;
  };
  func {
    display-name = "FUNC";
    bindings = <
      &kp F4   &kp F3   &kp F2   &kp F1
      &kp F8   &kp F7   &kp F6   &kp F5
    >;
  };
  modif {
    display-name = "Mod";
    bindings = <
      &kp LBRC             &shift2    &kp RPAR    &mo L_MOD
      &kp RBRC             &kp LBKT    &kp RBKT    &none
    >;
  };
  
  symbols {
    display-name = "Symbol";
    bindings = <
      &kp GRAVE            &kp SEMI  &kp BSLH  &kp EXCL
      &kp EQUAL            &kp MINUS &kp QMARK &mo L_SYMB
    >;
  };
//   navigation {
//     display-name = "Nav";
//     bindings = <
//       &kp PG_UP            &kp HOME  &kp UP    &kp END
//       &kp PG_DN            &kp LEFT  &kp DOWN  &kp RIGHT
//     >;
//   };
  

  
//   big_ardux_symbol { 
//     display-name = "Sym2";
//     bindings = <
//       &kp CARET &kp LBRC &kp RBRC &kp HASH  &kp GRAVE
//       &kp AMPS  &kp LPAR &kp RPAR &kp DLLR  &kp BSLH
//       &kp ASTRK &kp LBKT &kp RBKT &kp PRCNT &kp PIPE
//       BIG_BETWEEN_ROW_THREE_THUMBS
//       &none     &kp SEMI &none
//     >;
//   };
//   big_ardux_function {
//     display-name = "Func";
//     bindings = <
//       &kp F4  &kp F3  &kp F2  &kp F1  &none
//       &kp F8  &kp F7  &kp F6  &kp F5  &none
//       &kp F12 &kp F11 &kp F10 &kp F9 &none
//       BIG_BETWEEN_ROW_THREE_THUMBS
//       &none   &none   &none
//     >;
//   };
}; };


  

